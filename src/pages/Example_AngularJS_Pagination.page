<apex:page >
<html class="">

<head>
    <style type="text/css">
        @charset "UTF-8";
        [ng\:cloak],
        [ng-cloak],
        [data-ng-cloak],
        [x-ng-cloak],
        .ng-cloak,
        .x-ng-cloak,
        .ng-hide:not(.ng-hide-animate) {
            display: none !important;
        }
        
        ng\:form {
            display: block;
        }
        
        .ng-animate-shim {
            visibility: hidden;
        }
        
        .ng-anchor {
            position: absolute;
        }
    </style>
    <!--<script src="//assets.codepen.io/assets/editor/live/console_runner-d0a557e5cb67f9cd9bbb9673355c7e8e.js"></script>
    <script src="//assets.codepen.io/assets/editor/live/events_runner-21174b4c7273cfddc124acb0876792e0.js"></script>
    <script src="//assets.codepen.io/assets/editor/live/css_live_reload_init-7618a0de08795409d8f6c9ef6805f7b2.js"></script>-->
    <meta charset="UTF-8"></meta>
    <meta name="robots" content="noindex"></meta>
    <link rel="canonical" href="http://codepen.io/cornflourblue/pen/KVeaQL"></link>
    <title>AngularJS - Pagination Example with logic like Google</title>

    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css"></link>

    <script src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>

    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.3/angular.min.js"></script>

    <style class="cp-pen-styles">
        a {
            cursor: pointer;
        }
    </style>
</head>

<body>
    <div ng-app="app">
        <div ng-controller="ExampleController as vm" class="container">
            <div class="text-center">
                <h1>AngularJS - Pagination Example with logic like Google</h1>

                <!-- items being paged -->
                <div ng-repeat="item in vm.items">Item {{item}}</div>

                <!-- pager -->
                <ul ng-if="vm.pager.pages.length" class="pagination">
                    <li ng-class="{disabled:vm.pager.currentPage === 1}">
                        <a ng-click="vm.setPage(1)">First</a>
                    </li>
                    <li ng-class="{disabled:vm.pager.currentPage === 1}">
                        <a ng-click="vm.setPage(vm.pager.currentPage - 1)">Previous</a>
                    </li>
                    <li ng-repeat="page in vm.pager.pages" ng-class="{active:vm.pager.currentPage === page}">
                        <a ng-click="vm.setPage(page)">{{page}}</a>
                    </li>
                    <li ng-class="{disabled:vm.pager.currentPage === vm.pager.totalPages}">
                        <a ng-click="vm.setPage(vm.pager.currentPage + 1)">Next</a>
                    </li>
                    <li ng-class="{disabled:vm.pager.currentPage === vm.pager.totalPages}">
                        <a ng-click="vm.setPage(vm.pager.totalPages)">Last</a>
                    </li>
                </ul>
            </div>
        </div>
        <hr />
        <div class="credits text-center">
            <p>
                <a href="http://jasonwatmore.com/post/2016/01/31/AngularJS-Pagination-Example-with-Logic-like-Google.aspx" target="_top">AngularJS - Pagination Example with logic like Google</a>
            </p>
            <p>
                <a href="http://jasonwatmore.com" target="_top">JasonWatmore.com</a>
            </p>
        </div>
    </div>


    <!--<script src="//assets.codepen.io/assets/common/stopExecutionOnTimeout.js?t=1"></script>-->
    <script>
        (function() {
            'use strict';
            
            angular.module('app', []).factory('PagerService', PagerService).controller('ExampleController', ExampleController);

            function ExampleController(PagerService) {
                var vm = this;
                vm.dummyItems = _.range(1, 151);
                vm.pager = {};
                vm.setPage = setPage;
                initController();

                function initController() {
                    vm.setPage(1);
                }

                function setPage(page) {
                    if (page < 1 || page > vm.pager.totalPages) {
                        return;
                    }
                    vm.pager = PagerService.GetPager(vm.dummyItems.length, page);
                    vm.items = vm.dummyItems.slice(vm.pager.startIndex, vm.pager.endIndex + 1);
                    console.log('$$$$'+vm.dummyItems);
                }
            }

            function PagerService() {
                var service = {};
                service.GetPager = GetPager;
                return service;

                function GetPager(totalItems, currentPage, pageSize) {
                    currentPage = currentPage || 1;
                    pageSize = pageSize || 10;
                    var totalPages = Math.ceil(totalItems / pageSize);
                    var startPage, endPage;
                    if (totalPages <= 10) {
                        startPage = 1;
                        endPage = totalPages;
                    } else {
                        if (currentPage <= 6) {
                            startPage = 1;
                            endPage = 10;
                        } else if (currentPage + 4 >= totalPages) {
                            startPage = totalPages - 9;
                            endPage = totalPages;
                        } else {
                            startPage = currentPage - 5;
                            endPage = currentPage + 4;
                        }
                    }
                    var startIndex = (currentPage - 1) * pageSize;
                    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);
                    var pages = _.range(startPage, endPage + 1);
                    return {
                        totalItems: totalItems,
                        currentPage: currentPage,
                        pageSize: pageSize,
                        totalPages: totalPages,
                        startPage: startPage,
                        endPage: endPage,
                        startIndex: startIndex,
                        endIndex: endIndex,
                        pages: pages
                    };
                }
            }
        }());
        //# sourceURL=pen.js
    </script>
</body>

</html>
</apex:page>